// This file was generated by Mendix Modeler 6.10.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package main.proxies.microflows;

import java.util.HashMap;
import java.util.Map;
import com.mendix.core.Core;
import com.mendix.core.CoreException;
import com.mendix.systemwideinterfaces.MendixRuntimeException;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class Microflows
{
	// These are the microflows for the Main module
	public static mxchartutil.proxies.MultiSeriesChart createChart(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			IMendixObject result = (IMendixObject)Core.execute(context, "Main.CreateChart", params);
			return result == null ? null : mxchartutil.proxies.MultiSeriesChart.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void createTestDataSet(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "Main.CreateTestDataSet", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void generateChartOQL(IContext context, main.proxies.DynamicChart _dynamicChart)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DynamicChart", _dynamicChart == null ? null : _dynamicChart.getMendixObject());
			Core.execute(context, "Main.GenerateChartOQL", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static mxchartutil.proxies.MultiSeriesChart getChartDataSet(IContext context, mxchartutil.proxies.MultiSeriesChart _multiSeriesChart)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MultiSeriesChart", _multiSeriesChart == null ? null : _multiSeriesChart.getMendixObject());
			IMendixObject result = (IMendixObject)Core.execute(context, "Main.GetChartDataSet", params);
			return result == null ? null : mxchartutil.proxies.MultiSeriesChart.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static mxchartutil.proxies.MultiSeriesChart getDynamicChartDataSet(IContext context, main.proxies.DynamicMultiSeriesChart _multiSeriesChart)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MultiSeriesChart", _multiSeriesChart == null ? null : _multiSeriesChart.getMendixObject());
			IMendixObject result = (IMendixObject)Core.execute(context, "Main.GetDynamicChartDataSet", params);
			return result == null ? null : mxchartutil.proxies.MultiSeriesChart.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void getJsonForOqlChartQuery(IContext context, main.proxies.DynamicChart _dynamicChart)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DynamicChart", _dynamicChart == null ? null : _dynamicChart.getMendixObject());
			Core.execute(context, "Main.GetJsonForOqlChartQuery", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void mapJsonToObjects(IContext context, main.proxies.DynamicChart _dynamicChart)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DynamicChart", _dynamicChart == null ? null : _dynamicChart.getMendixObject());
			Core.execute(context, "Main.MapJsonToObjects", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static main.proxies.DynamicChart newDynamicChart(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			IMendixObject result = (IMendixObject)Core.execute(context, "Main.NewDynamicChart", params);
			return result == null ? null : main.proxies.DynamicChart.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static mxchartutil.proxies.MultiSeriesChart showChartPopup(IContext context, main.proxies.DynamicChart _dynamicChart)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DynamicChart", _dynamicChart == null ? null : _dynamicChart.getMendixObject());
			IMendixObject result = (IMendixObject)Core.execute(context, "Main.ShowChartPopup", params);
			return result == null ? null : mxchartutil.proxies.MultiSeriesChart.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void testOQLToDatasetEntity(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "Main.TestOQLToDatasetEntity", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
}